<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>用户中心 - Mind Record</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f0f2f5;
            margin: 0;
            padding: 20px;
            color: #2c3e50;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .profile-header {
            background: linear-gradient(135deg, #fff, #f8f9fa);
            border-radius: 20px;
            padding: 35px;
            margin-bottom: 35px;
            box-shadow: 0 8px 30px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
            border: 1px solid rgba(255,255,255,0.8);
        }

        .profile-header:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 40px rgba(0,0,0,0.12);
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 30px;
        }

        .avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            background: linear-gradient(135deg, #4a90e2, #357abd);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 48px;
            box-shadow: 0 8px 25px rgba(74,144,226,0.4);
            border: 6px solid white;
            transition: all 0.3s ease;
        }

        .avatar:hover {
            transform: scale(1.05);
            box-shadow: 0 12px 30px rgba(74,144,226,0.5);
        }

        .stats-container {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
            margin: 25px 0;
        }

        .stat-card {
            background: white;
            padding: 20px 15px;
            border-radius: 16px;
            box-shadow: 0 8px 30px rgba(0,0,0,0.06);
            text-align: center;
            transition: all 0.3s ease;
            border: 1px solid rgba(0,0,0,0.05);
            position: relative;
            overflow: hidden;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, #4a90e2, #357abd);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 40px rgba(0,0,0,0.1);
        }

        .stat-card:hover::before {
            opacity: 1;
        }

        .stat-value {
            font-size: 32px;
            font-weight: bold;
            background: linear-gradient(135deg, #4a90e2, #357abd);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin: 15px 0;
        }

        .stat-label {
            color: #666;
            font-size: 14px;
        }

        .records-section {
            background: white;
            border-radius: 20px;
            padding: 35px;
            box-shadow: 0 8px 30px rgba(0,0,0,0.06);
            border: 1px solid rgba(0,0,0,0.05);
        }

        .records-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .records-filter {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            margin-bottom: 20px;
        }

        .filter-btn {
            padding: 12px 24px;
            border: none;
            border-radius: 12px;
            background: #f5f6fa;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
            font-size: 15px;
        }

        .filter-btn:hover {
            background: #e8eaf6;
            transform: translateY(-2px);
        }

        .filter-btn.active {
            background: linear-gradient(135deg, #4a90e2, #357abd);
            color: white;
            box-shadow: 0 8px 20px rgba(74,144,226,0.3);
        }

        .records-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            margin-top: 20px;
        }

        .records-table th,
        .records-table td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        .records-table th {
            background: #f8f9fa;
            font-weight: 600;
            color: #2c3e50;
        }

        .records-table tr:hover {
            background-color: #f8f9fa;
        }

        .records-table tr:last-child td {
            border-bottom: none;
        }

        .back-btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 12px 24px;
            background: #4a90e2;
            color: white;
            text-decoration: none;
            border-radius: 8px;
            margin-bottom: 30px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(74,144,226,0.3);
        }

        .back-btn:hover {
            background: #357abd;
            transform: translateY(-2px);
        }

        .loading {
            text-align: center;
            padding: 20px;
        }

        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid #4a90e2;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 768px) {
            body {
                padding: 10px;
            }

            .container {
                padding: 0;
            }

            .profile-header {
                padding: 20px;
                margin-bottom: 20px;
            }

            .user-info {
                flex-direction: column;
                text-align: center;
                gap: 20px;
            }

            .user-details h2 {
                font-size: 1.5rem;
                margin: 10px 0;
            }

            .user-details p {
                font-size: 0.9rem;
                margin: 5px 0;
            }

            .stats-container {
                display: flex;
                flex-wrap: nowrap;
                overflow-x: auto;
                gap: 15px;
                padding: 5px;
                margin: 15px -10px;
                -webkit-overflow-scrolling: touch;
            }

            .stat-card {
                flex: 0 0 auto;
                width: calc(33.333% - 10px);
                min-width: 140px;
                padding: 15px 10px;
            }

            /* 优化统计卡片滚动条 */
            .stats-container::-webkit-scrollbar {
                height: 4px;
            }

            .stats-container::-webkit-scrollbar-track {
                background: #f1f1f1;
                border-radius: 4px;
            }

            .stats-container::-webkit-scrollbar-thumb {
                background: #4a90e2;
                border-radius: 4px;
            }

            .stats-container::-webkit-scrollbar-thumb:hover {
                background: #357abd;
            }

            .stat-value {
                font-size: 20px;
            }

            .stat-label {
                font-size: 12px;
            }

            .records-section {
                padding: 15px;
                border-radius: 12px;
            }

            .records-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }

            .records-filter {
                width: 100%;
                overflow-x: auto;
                padding-bottom: 5px;
                flex-wrap: nowrap;
                -webkit-overflow-scrolling: touch;
            }

            .filter-btn {
                padding: 8px 16px;
                font-size: 14px;
                white-space: nowrap;
            }

            /* 移动端表格样式优化 */
            .records-table {
                display: block;
                font-size: 14px;
            }

            .records-table thead {
                display: none;
            }

            .records-table tbody {
                display: block;
            }

            .records-table tr {
                display: block;
                background: white;
                padding: 20px;
                margin-bottom: 15px;
                border-radius: 16px;
                box-shadow: 0 4px 15px rgba(0,0,0,0.05);
                transition: all 0.3s ease;
                border: 1px solid rgba(0,0,0,0.05);
            }

            .records-table tr:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 25px rgba(0,0,0,0.08);
            }

            .records-table td {
                display: flex;
                padding: 12px 0;
                border-bottom: 1px solid #eee;
                align-items: center;
                font-size: 15px;
            }

            .records-table td::before {
                content: attr(data-label);
                font-weight: 600;
                width: 120px;  /* 增加标签宽度以适应新的列 */
                min-width: 120px;
                color: #4a90e2;
                font-size: 14px;
            }

            .back-btn {
                width: 100%;
                justify-content: center;
                margin-bottom: 20px;
            }

            .loading {
                padding: 10px;
            }

            .loading-spinner {
                width: 35px;
                height: 35px;
                border: 3px solid #f3f3f3;
                border-top: 3px solid #4a90e2;
                border-radius: 50%;
                animation: spin 0.8s linear infinite;
            }

            /* 优化过滤器滚动条 */
            .records-filter::-webkit-scrollbar {
                height: 4px;
            }

            .records-filter::-webkit-scrollbar-track {
                background: #f1f1f1;
                border-radius: 4px;
            }

            .records-filter::-webkit-scrollbar-thumb {
                background: #4a90e2;
                border-radius: 4px;
            }

            .records-filter::-webkit-scrollbar-thumb:hover {
                background: #357abd;
            }

            /* 优化平均时间显示 */
            td[data-label="近10局平均"] {
                color: #666;
                font-size: 0.9em;
            }
        }

        /* 添加小屏幕设备的额外优化 */
        @media (max-width: 480px) {
            .avatar {
                width: 90px;
                height: 90px;
                font-size: 36px;
                border-width: 4px;
            }

            .stat-value {
                font-size: 24px;
            }

            .stat-label {
                font-size: 12px;
            }

            .profile-header {
                padding: 25px;
                margin-bottom: 25px;
            }

            .user-details h2 {
                font-size: 1.3rem;
            }

            .stat-card {
                padding: 20px;
            }

            .records-section {
                padding: 20px;
            }

            .records-header h3 {
                font-size: 20px;
            }

            .filter-btn {
                padding: 10px 18px;
                font-size: 13px;
            }

            .stats-container {
                margin: 15px -5px;
            }

            .stat-card {
                padding: 12px 8px;
                min-width: 120px;
            }

            .stat-value {
                font-size: 18px;
                margin: 8px 0;
            }

            .stat-label {
                font-size: 11px;
            }

            i.fas.fa-2x {
                font-size: 1.5em;
            }
        }
    </style>

    <!-- 在 body 标签最后添加渐入动画 -->
    <style>
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .profile-header,
        .stat-card,
        .records-section {
            animation: fadeInUp 0.6s ease backwards;
        }

        .stat-card:nth-child(1) { animation-delay: 0.1s; }
        .stat-card:nth-child(2) { animation-delay: 0.2s; }
        .stat-card:nth-child(3) { animation-delay: 0.3s; }
    </style>
</head>
<body>
    <div class="container">
        <a href="/" class="back-btn">
            <i class="fas fa-arrow-left"></i> 返回首页
        </a>

        <div class="profile-header">
            <div class="user-info">
                <div class="avatar">
                    <%= user.user_metadata.username ? user.user_metadata.username[0].toUpperCase() : user.email[0].toUpperCase() %>
                </div>
                <div class="user-details">
                    <h2><%= user.user_metadata.username || '未设置用户名' %></h2>
                    <p><i class="fas fa-envelope"></i> <%= user.email %></p>
                    <p><i class="fas fa-clock"></i> 注册时间：<%= new Date(user.created_at).toLocaleDateString() %></p>
                </div>
            </div>
        </div>

        <div class="stats-container">
            <div class="stat-card">
                <i class="fas fa-gamepad fa-2x" style="color: #4a90e2;"></i>
                <div class="stat-value" id="totalGames">-</div>
                <div class="stat-label">总游戏次数</div>
            </div>
            <div class="stat-card">
                <i class="fas fa-trophy fa-2x" style="color: #4a90e2;"></i>
                <div class="stat-value" id="bestScore">-</div>
                <div class="stat-label">最高分数</div>
            </div>
            <div class="stat-card">
                <i class="fas fa-clock fa-2x" style="color: #4a90e2;"></i>
                <div class="stat-value" id="totalTime">-</div>
                <div class="stat-label">总游戏时长</div>
            </div>
        </div>

        <div class="records-section">
            <div class="records-header">
                <h3>游戏记录</h3>
                <div class="records-filter">
                    <button class="filter-btn active" data-game="all">全部</button>
                    <% games.forEach(function(game) { %>
                        <button class="filter-btn" data-game="<%= game.id %>">
                            <%= game.title %>
                        </button>
                    <% }); %>
                </div>
            </div>

            <table class="records-table">
                <thead>
                    <tr>
                        <th>游戏</th>
                        <th>分数</th>
                        <th>用时</th>
                        <th>近10局平均</th>
                        <th>难度</th>
                        <th>时间</th>
                    </tr>
                </thead>
                <tbody id="recordsBody">
                    <tr>
                        <td colspan="6">
                            <div class="loading">
                                <div class="loading-spinner"></div>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        // 加载游戏记录
        async function loadRecords(gameId = 'all') {
            const tbody = document.getElementById('recordsBody');
            tbody.innerHTML = `
                <tr>
                    <td colspan="6">
                        <div class="loading">
                            <div class="loading-spinner"></div>
                        </div>
                    </td>
                </tr>
            `;

            try {
                const response = await fetch(`/profile/records${gameId === 'all' ? '' : '/' + gameId}`);
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.error || '获取记录失败');
                }
                
                const records = await response.json();
                console.log('加载的记录:', records);
                
                tbody.innerHTML = records.map(record => `
                    <tr>
                        <td data-label="游戏">${record.game_name}</td>
                        <td data-label="分数">${record.score}</td>
                        <td data-label="用时">${formatTime(record.time_spent)}</td>
                        <td data-label="近10局平均">${record.avg_time_last_10 ? formatTime(record.avg_time_last_10) : '-'}</td>
                        <td data-label="难度">${record.level || '-'}</td>
                        <td data-label="时间">${new Date(record.created_at).toLocaleString()}</td>
                    </tr>
                `).join('');

                // 更新统计数据
                if (gameId === 'all') {
                    updateStats(records);
                }
            } catch (error) {
                console.error('加载记录失败:', error);
                tbody.innerHTML = `
                    <tr>
                        <td colspan="6" style="text-align: center; color: #dc3545; padding: 20px;">
                            加载记录失败: ${error.message}
                        </td>
                    </tr>
                `;
            }
        }

        // 格式化时间函数
        function formatTime(milliseconds) {
            const minutes = Math.floor(milliseconds / 60000);
            const seconds = Math.floor((milliseconds % 60000) / 1000);
            const ms = Math.floor((milliseconds % 1000) / 10);
            return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}.${String(ms).padStart(2, '0')}`;
        }

        // 添加过滤按钮事件监听
        document.querySelectorAll('.filter-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
                btn.classList.add('active');
                loadRecords(btn.dataset.game);
            });
        });

        // 页面加载时获取记录
        document.addEventListener('DOMContentLoaded', () => {
            loadRecords();
        });

        // 更新统计数据
        function updateStats(records) {
            const totalGames = records.length;
            const bestScore = Math.max(...records.map(r => r.score || 0));
            const totalTimeSpent = records.reduce((sum, r) => sum + (r.time_spent || 0), 0);

            document.getElementById('totalGames').textContent = totalGames;
            document.getElementById('bestScore').textContent = bestScore;
            document.getElementById('totalTime').textContent = 
                `${Math.floor(totalTimeSpent / 3600000)}h ${Math.floor((totalTimeSpent % 3600000) / 60000)}m`;
        }
    </script>
</body>
</html> 